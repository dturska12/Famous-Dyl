{"version":3,"sources":["utils/pinata.js","utils/interact.js","Minter.js","UploadArtwork.js","firebase/firebase.js","UploadAudio.js","App.js","reportWebVitals.js","index.js"],"names":["require","config","axios","pinJSONToIPFS","JSONBody","a","post","headers","pinata_api_key","process","pinata_secret_api_key","then","response","success","pinataUrl","data","IpfsHash","catch","error","console","log","message","web3","createAlchemyWeb3","contractABI","contractAddress","connectWallet","window","ethereum","enable","address","obj","connectedStatus","status","mintNFT","artist","artwork","waveform","name","genre","trim","metadata","Object","image","pinataResponse","tokenURI","eth","Contract","contract","transactionParameters","to","from","selectedAddress","methods","encodeABI","request","method","params","txHash","useStyles","makeStyles","theme","root","display","size","height","width","appBar","marginLeft","backgroundColor","drawer","flexShrink","drawerPaper","pageLinks","toolbar","mixins","content","flexGrow","palette","background","default","padding","spacing","Minter","props","useState","isConnected","setConnectedStatus","walletAddress","setWallet","setStatus","setName","setArtwork","setWaveform","setGenre","setArtist","useEffect","connectWalletPressed","walletResponse","onMintPressed","accounts","length","classes","AppBar","position","className","Toolbar","Typography","variant","noWrap","Breadcrumbs","aria-label","Link","color","href","id","onClick","String","substring","type","placeholder","onChange","event","target","value","FormData","UploadArtwork","setFile","setError","IPFSHash","setIPFS","preview","raw","setImage","types","handleFinalChange","maxBodyLength","e","URL","createObjectURL","files","selectedFile","set","includes","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","UploadAudio","setSelectedFile","isSelected","setIsSelected","imgUrl","imageAsUrl","setImageAsUrl","progressBar","setProgress","lastModifiedDate","toLocaleDateString","preventDefault","ref","put","on","snapShot","progress","bytesTransferred","totalBytes","err","child","getDownloadURL","fireBaseUrl","prevObject","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94501a65.chunk.js","sourcesContent":["require('dotenv').config();\nconst key = process.env.REACT_APP_PINATA_KEY;\n//\"642927a9d15ec98a0d39\"\nconst secret  = process.env.REACT_APP_PINATA_SECRET;\n//\"0071ef8376ebbd6f0be7a3b73fe8d4e267709e1088f12ea37ae23412d06f3116\"\n//process.env.REACT_APP_PINATA_SECRET;\nconst bearer = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mb3JtYXRpb24iOnsiaWQiOiIyYzUyMTUzNi03ZmMzLTRmZmYtYmZkMi00NTNhMGE1ZTRmZjIiLCJlbWFpbCI6Im1lQGNvZGVyZm9vbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGluX3BvbGljeSI6eyJyZWdpb25zIjpbeyJpZCI6Ik5ZQzEiLCJkZXNpcmVkUmVwbGljYXRpb25Db3VudCI6MX1dLCJ2ZXJzaW9uIjoxfSwibWZhX2VuYWJsZWQiOmZhbHNlfSwiYXV0aGVudGljYXRpb25UeXBlIjoic2NvcGVkS2V5Iiwic2NvcGVkS2V5S2V5IjoiNjQyOTI3YTlkMTVlYzk4YTBkMzkiLCJzY29wZWRLZXlTZWNyZXQiOiIwMDcxZWY4Mzc2ZWJiZDZmMGJlN2EzYjczZmU4ZDRlMjY3NzA5ZTEwODhmMTJlYTM3YWUyMzQxMmQwNmYzMTE2IiwiaWF0IjoxNjIxNzQ0OTE2fQ.RwI_A9vXc9AOXViURC1_XMyLYycp1umUcBGzrml8030\"\n\n\nconst axios = require('axios');\n\nexport const pinJSONToIPFS = async(JSONBody) => {\n    const url = `https://api.pinata.cloud/pinning/pinJSONToIPFS`;\n    //making axios POST request to Pinata ⬇️\n    return axios \n        .post(url, JSONBody, {\n            headers: {\n               pinata_api_key: key,\n               pinata_secret_api_key: secret,\n               \n            }\n        })\n        .then(function (response) {\n           return {\n               success: true,\n               pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.data.IpfsHash\n           };\n        })\n        .catch(function (error) {\n            console.log(error)\n            return {\n                success: false,\n                message: error.message,\n            }\n           \n    });\n};","import {pinJSONToIPFS} from './pinata.js'\n\nrequire('dotenv').config();\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\nconst web3 = createAlchemyWeb3(alchemyKey); \n\n\n\nconst contractABI = require('../contract-abi.json')\nconst contractAddress = \"0x92f144c7208Dba83bBe54bae220D3a38fbA729b6\";\n//\"0x6B59Be0921B2A88BbC9a56f1f702Bc6E604976Ae\";\n//\"0x08AAd78675102A61FAf7cf5D9997d242c17b80D4\";\n//\"0x4C4a07F737Bf57F6632B6CAB089B78f62385aCaE\";\n//\"0x92f144c7208Dba83bBe54bae220D3a38fbA729b6\";\n\nexport const connectWallet = async () => {\n    if (window.ethereum) {\n        try {\n            const address = await window.ethereum.enable();\n            const obj = {\n                connectedStatus:true,\n                status:\"\",\n                address:address\n            }\n            return obj;\n        } catch (error) {\n            return {\n                connectedStatus: false,\n                status: \"🦊 Connect to Metamask using the button on the top right\"\n            }\n        }\n    } else {\n        return {\n            connectedStatus: false,\n            status: \"🦊  You must install Metamask into your browser: https://metamask.io/download.html\"\n        }\n    }\n};\n\nexport const mintNFT = async(artist,artwork,waveform, name, genre) => {\n   \n    //error handling\n    if (waveform.trim() == \"\" || (name.trim() == \"\" || genre.trim() == \"\")) { \n        return {\n            success: false,\n            status: \"❗Please make sure all fields are completed before minting.\",\n        }\n    }\n  \n    //make metadata\n    const metadata = new Object();\n    metadata.name = name;\n    //metadata.image = url;\n    metadata.genre = genre;\n    metadata.artist = artist;\n    metadata.image = artwork;\n    metadata.waveform = waveform;\n\n    //pinata pin request\n    const pinataResponse = await pinJSONToIPFS(metadata);\n    console.log(pinataResponse)\n    if (!pinataResponse.success) {\n        return {\n            success: false,\n            status: \"😢 Something went wrong while uploading your tokenURI.\",\n        }\n    } \n    const tokenURI = pinataResponse.pinataUrl;  \n\n    //load smart contract\n    window.contract = await new web3.eth.Contract(contractABI, contractAddress);//loadContract();\n\n    //set up your Ethereum transaction\n    const transactionParameters = {\n        to: contractAddress, // Required except during contract publications.\n        from: window.ethereum.selectedAddress, // must match user's active address.\n        'data': window.contract.methods.mintNFT(window.ethereum.selectedAddress, tokenURI).encodeABI() //make call to NFT smart contract \n    };\n  \n    //sign transaction via Metamask\n    try {\n        const txHash = await window.ethereum\n            .request({\n                method: 'eth_sendTransaction',\n                params: [transactionParameters],\n            });\n        return {\n            success: true,\n            status: \"✅ Check out your transaction on Etherscan: https://etherscan.io/tx/\" + txHash\n        }\n    } catch (error) {\n        return {\n            success: false,\n            status: \"😥 Something went wrong: \" + error.message\n        }\n    }\n}","import { useEffect, useState } from \"react\";\n\nimport logo from './img/logo.png'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\nimport { connectWallet, mintNFT } from './utils/interact.js'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  size: {\n    height: 30,\n    width: 110\n  },\n  appBar: {\n    width: `calc(100% - 0px)`,\n    marginLeft: drawerWidth,\n    backgroundColor: \"Grey\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  pageLinks: {\n    marginLeft:\"60%\"\n    //marginTop:100\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 0,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n    \n  },\n}));\n\nconst Minter = (props) => {\n\n  //State variables\n  const [isConnected, setConnectedStatus] = useState(false);\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n//  const [url, setURL] = useState(\"\");\n  const [artwork, setArtwork] = useState(\"\");\n  const [waveform, setWaveform] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n\n\n  useEffect(async () => { //TODO: implement\n\n  });\n\n  const connectWalletPressed = async () => { //TODO: implement\n    const walletResponse = await connectWallet();\n    setConnectedStatus(walletResponse.connectedStatus)\n    setStatus(walletResponse.status)\n    if (isConnected) {\n      setWallet(walletAddress)\n    }\n  };\n\n  const onMintPressed = async () => { //TODO: implement\n    const { status } = await mintNFT(artist,artwork,waveform, name, genre);\n    setStatus(status);\n  };\n  \n  //const  mintTestPress = async () => {\n //   console.log(name)\n //   console.log(genre)\n //   console.log(waveform)\n  //  console.log(artwork)\n //   console.log(artist)\n // }\n\n  useEffect(async () => {\n    if (window.ethereum) { //if Metamask installed\n      try {\n        const accounts = await window.ethereum.request({ method: \"eth_accounts\" }) //get Metamask wallet\n        if (accounts.length) { //if a Metamask account is connected\n          setConnectedStatus(true);\n          setWallet(accounts[0]);\n        } else {\n          setConnectedStatus(false);\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\n        }\n      } catch {\n        setConnectedStatus(false);\n        setStatus(\n          \"🦊 Connect to Metamask using the top right button. \" +\n          walletAddress\n        );\n      }\n    }\n  });\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n\n        <Toolbar>\n        <Typography variant=\"h6\" noWrap>\n            DistroToken\n          </Typography>\n          <Breadcrumbs aria-label=\"breadcrumb\" className={classes.pageLinks}>\n            <Link color=\"inherit\" href=\"/UploadAudio\" >\n              Upload Audio\n  </Link>\n            <Link color=\"inherit\" href=\"/UploadArtwork\" >\n              Upload Artwork\n  </Link>\n            <Typography color=\"textPrimary\">Mint Token</Typography>\n          </Breadcrumbs>\n        </Toolbar>\n      </AppBar>\n      <br />\n      <br />\n\n      <div className=\"Minter\">\n        <button id=\"walletButton\" onClick={connectWalletPressed}>\n          {isConnected ? (\n            \"👛 Connected: \" +\n            String(walletAddress).substring(0, 6) +\n            \"...\" +\n            String(walletAddress).substring(38)\n          ) : (\n            <span>👛 Connect Wallet</span>\n          )}\n        </button>\n\n        <br></br>\n        <h1 id=\"title\">The Future Of Music Ownership!</h1>\n        <p>\n          Simply add your asset's waveform, track name, artwork , artist name and genre, then press \"Mint.\"\n      </p>\n        <form>\n          <h2>Link To Artwork: ( Upload Your Artwork First ) </h2>\n          <input\n            type=\"text\"\n            placeholder=\"e.g. https://gateway.pinata.cloud/ipfs/<hash>\"\n            onChange={(event) => setArtwork(event.target.value)}\n          />\n          <h2>Link To Waveform: ( Upload Your Audio File First )</h2>\n          <input\n            type=\"text\"\n            placeholder=\"e.g. https://firebasestorage.googleapis.com/v0/b/distrotoken-hosting.appspot.com/o/<Stuff>\"\n            onChange={(event) => setWaveform(event.target.value)}\n          />\n          <h2>Release Name: </h2>\n          <input\n            type=\"text\"\n            placeholder=\"e.g. My first Audio NFT!\"\n            onChange={(event) => setName(event.target.value)}\n          />\n          <h2>Artist Name: </h2>\n          <input\n            type=\"text\"\n            placeholder=\"e.g. Michael Jackson ;)\"\n            onChange={(event) => setArtist(event.target.value)}\n          />\n          <h2>Genre:</h2>\n          <select id=\"genres\" name=\"genres\" onChange={(event) => setGenre(event.target.value)}>\n          <option value=\"Alternative\">\n              Alternative\n            </option>\n            <option value=\"Alternative / College Rock\">\n              Alternative / College Rock\n            </option>\n            <option value=\"Alternative / Goth Rock\">\n              Alternative / Goth Rock\n            </option>\n            <option value=\"Alternative / Grunge\">\n              Alternative / Grunge\n            </option>\n            <option value=\"Alternative / Indie Rock\">\n              Alternative / Indie Rock\n            </option>\n            <option value=\"Alternative / New Wave\">\n              Alternative / New Wave\n            </option>\n            <option value=\"Alternative / Punk\">\n              Alternative / Punk\n            </option>\n            <option value=\"Blues\">\n              Blues\n            </option>\n            <option value=\"Blues / Acoustic Blues\">\n              Blues / Acoustic Blues\n            </option>\n            <option value=\"Blues / Chicago Blues\">\n              Blues / Chicago Blues\n            </option>\n            <option value=\"Blues / Classic Blues\">\n              Blues / Classic Blues\n            </option>\n            <option value=\"Blues / Contemporary Blues\">\n              Blues / Contemporary Blues\n            </option>\n            <option value=\"Blues / Country Blues\">\n              Blues / Country Blues\n            </option>\n            <option value=\"Blues / Delta Blues\">\n              Blues / Delta Blues\n            </option>\n            <option value=\"Blues / Electric Blues\">\n              Blues / Electric Blues\n            </option>\n            <option value=\"Children's Music\">\n              Children's Music\n            </option>\n            <option value=\"Children's Music / Lullabies\">\n              Children's Music / Lullabies\n            </option>\n            <option value=\"Children's Music / Sing-Along\">\n              Children's Music / Sing-Along\n            </option>\n            <option value=\"Country\">\n              Country\n            </option>\n            <option value=\"Country / Alternative Country\">\n              Country / Alternative Country\n            </option>\n            <option value=\"Country / Americana\">\n              Country / Americana\n            </option>\n            <option value=\"Country / Bluegrass\">\n              Country / Bluegrass\n            </option>\n            <option value=\"Country / Contemporary Bluegrass\">\n              Country / Contemporary Bluegrass\n            </option>\n            <option value=\"Country / Contemporary Country\">\n              Country / Contemporary Country\n            </option>\n            <option value=\"Country / Country Gospel\">\n              Country / Country Gospel\n            </option>\n            <option value=\"Country / Honky Tonk\">\n              Country / Honky Tonk\n            </option>\n            <option value=\"Country / Outlaw Country\">\n              Country / Outlaw Country\n            </option>\n            <option value=\"Country / Traditional Bluegrass\">\n              Country / Traditional Bluegrass\n            </option>\n            <option value=\"Country / Traditional Country\">\n              Country / Traditional Country\n            </option>\n            <option value=\"Country / Urban Cowboy\">\n              Country / Urban Cowboy\n            </option>\n            <option value=\"Dance\">\n              Dance\n            </option>\n            <option value=\"Dance / Breakbeat\">\n              Dance / Breakbeat\n            </option>\n            <option value=\"Dance / Garage\">\n              Dance / Garage\n            </option>\n            <option value=\"Dance / Hardcore\">\n              Dance / Hardcore\n            </option>\n            <option value=\"Dance / House\">\n              Dance / House\n            </option>\n            <option value=\"Dance / Jungle/Drum’n’bass\">\n              Dance / Jungle/Drum’n’bass\n            </option>\n            <option value=\"Dance / Techno\">\n              Dance / Techno\n            </option>\n            <option value=\"Dance / Trance\">\n              Dance / Trance\n            </option>\n            <option value=\"Dance / Trap\">\n              Dance / Trap\n            </option>\n            <option value=\"Electronic\">\n              Electronic\n            </option>\n            <option value=\"Electronic / Ambient\">\n              Electronic / Ambient\n            </option>\n            <option value=\"Electronic / Downtempo\">\n              Electronic / Downtempo\n            </option>\n            <option value=\"Electronic / Dubstep\">\n              Electronic / Dubstep\n            </option>\n            <option value=\"Electronic / Electronica\">\n              Electronic / Electronica\n            </option>\n            <option value=\"Electronic / Future Bass\">\n              Electronic / Future Bass\n            </option>\n            <option value=\"Electronic / IDM/Experimental\">\n              Electronic / IDM/Experimental\n            </option>\n            <option value=\"Electronic / Industrial\">\n              Electronic / Industrial\n            </option>\n            <option value=\"Electronic / Minimalism\">\n              Electronic / Minimalism\n            </option>\n            <option value=\"Folk\">\n              Folk\n            </option>\n            <option value=\"Hip Hop/Rap\">\n              Hip Hop/Rap\n            </option>\n            <option value=\"Hip Hop/Rap / Alternative Rap\">\n              Hip Hop/Rap / Alternative Rap\n            </option>\n            <option value=\"Hip Hop/Rap / Dirty South\">\n              Hip Hop/Rap / Dirty South\n            </option>\n            <option value=\"Hip Hop/Rap / East Cost Rap\">\n              Hip Hop/Rap / East Coast Rap\n            </option>\n            <option value=\"Hip Hop/Rap / Gangsta Rap\">\n              Hip Hop/Rap / Gangsta Rap\n            </option>\n            <option value=\"Hip Hop/Rap / Hardcore Rap\">\n              Hip Hop/Rap / Hardcore Rap\n            </option>\n            <option value=\"Hip Hop/Rap / Hip-Hop\">\n              Hip Hop/Rap / Hip-Hop\n            </option>\n            <option value=\"Hip Hop/Rap / Latin Rap\">\n              Hip Hop/Rap / Latin Rap\n            </option>\n            <option value=\"Hip Hop/Rap / Old School Rap\">\n              Hip Hop/Rap / Old School Rap\n            </option>\n            <option value=\"Hip Hop/Rap / Rap\">\n              Hip Hop/Rap / Rap\n            </option>\n            <option value=\"Hip Hop/Rap / Underground Rap\">\n              Hip Hop/Rap / Underground Rap\n            </option>\n            <option value=\"Hip Hop/Rap / West Coast Rap\">\n              Hip Hop/Rap / West Coast Rap\n            </option>\n            <option value=\"Holiday\">\n              Holiday\n            </option>\n            <option value=\"Holiday / Chanukah\">\n              Holiday / Chanukah\n            </option>\n            <option value=\"Holiday / Christmas\">\n              Holiday / Christmas\n            </option>\n            <option value=\"Holiday / Christmas: Children’s\">\n              Holiday / Christmas: Children’s\n            </option>\n            <option value=\"Holiday / Christmas: Classic\">\n              Holiday / Christmas: Classic\n            </option>\n            <option value=\"Holiday / Christmas: Classical\">\n              Holiday / Christmas: Classical\n            </option>\n            <option value=\"Holiday / Christmas: Jazz\">\n              Holiday / Christmas: Jazz\n            </option>\n            <option value=\"Holiday / Christmas: Modern\">\n              Holiday / Christmas: Modern\n            </option>\n            <option value=\"Holiday / Christmas: Pop\">\n              Holiday / Christmas: Pop\n            </option>\n            <option value=\"Holiday / Christmas: R&amp;B\">\n              Holiday / Christmas: R&amp;B\n            </option>\n            <option value=\"Holiday / Christmas: Religious\">\n              Holiday / Christmas: Religious\n            </option>\n            <option value=\"Holiday / Christmas: Rock\">\n              Holiday / Christmas: Rock\n            </option>\n            <option value=\"Holiday / Easter\">\n              Holiday / Easter\n            </option>\n            <option value=\"Holiday / Halloween\">\n              Holiday / Halloween\n            </option>\n            <option value=\"Holiday / Thanksgiving\">\n              Holiday / Thanksgiving\n            </option>\n            <option value=\"Inspirational\">\n              Inspirational\n            </option>\n            <option value=\"Jazz\">\n              Jazz\n            </option>\n            <option value=\"Jazz / Avant-Garde Jazz\">\n              Jazz / Avant-Garde Jazz\n            </option>\n            <option value=\"Jazz / Big Band\">\n              Jazz / Big Band\n            </option>\n            <option value=\"Jazz / Contemporary Jazz\">\n              Jazz / Contemporary Jazz\n            </option>\n            <option value=\"Jazz / Cool\">\n              Jazz / Cool\n            </option>\n            <option value=\"Jazz / Crossover Jazz\">\n              Jazz / Crossover Jazz\n            </option>\n            <option value=\"Jazz / Dixieland\">\n              Jazz / Dixieland\n            </option>\n            <option value=\"Jazz / Easy Listening\">\n              Jazz / Easy Listening\n            </option>\n            <option value=\"Jazz / Fusion\">\n              Jazz / Fusion\n            </option>\n            <option value=\"Jazz / Hard Bop\">\n              Jazz / Hard Bop\n            </option>\n            <option value=\"Jazz / Latin Jazz\">\n              Jazz / Latin Jazz\n            </option>\n            <option value=\"Jazz / Mainstream Jazz\">\n              Jazz / Mainstream Jazz\n            </option>\n            <option value=\"Jazz / Ragtime\">\n              Jazz / Ragtime\n            </option>\n            <option value=\"Jazz / Smooth Jazz\">\n              Jazz / Smooth Jazz\n            </option>\n            <option value=\"Jazz / Trad Jazz\">\n              Jazz / Trad Jazz\n            </option>\n            <option value=\"Latin\">\n              Latin\n            </option>\n            <option value=\"Latin/ Alternativo &amp; Rock Latino\">\n              Latin / Alternativo &amp; Rock Latino\n            </option>\n            <option value=\"Latin/ Baladas y Boleros\">\n              Latin / Baladas y Boleros\n            </option>\n            <option value=\"Latin / Contemporary Latin\">\n              Latin / Contemporary Latin\n            </option>\n            <option value=\"Latin / Pop Latino\">\n              Latin / Pop Latino\n            </option>\n            <option value=\"Latin / Raíces\">\n              Latin / Raíces\n            </option>\n            <option value=\"Latin / Reggaeton y Hip-Hop\">\n              Latin / Reggaeton y Hip-Hop\n            </option>\n            <option value=\"Latin / Regional Mexicano\">\n              Latin / Regional Mexicano\n            </option>\n            <option value=\"Latin / Salsa y Tropical\">\n              Latin / Salsa y Tropical\n            </option>\n            <option value=\"New Age\">\n              New Age\n            </option>\n            <option value=\"New Age / Healing\">\n              New Age / Healing\n            </option>\n            <option value=\"New Age / Meditation\">\n              New Age / Meditation\n            </option>\n            <option value=\"New Age / Nature\">\n              New Age / Nature\n            </option>\n            <option value=\"New Age / Relaxation\">\n              New Age / Relaxation\n            </option>\n            <option value=\"New Age / Travel\">\n              New Age / Travel\n            </option>\n            <option value=\"Pop\">\n              Pop\n            </option>\n            <option value=\"Pop / Adult Contemporary\">\n              Pop / Adult Contemporary\n            </option>\n            <option value=\"Pop / Britpop\">\n              Pop / Britpop\n            </option>\n            <option value=\"Pop / Pop/Rock\">\n              Pop / Pop/Rock\n            </option>\n            <option value=\"Pop / Singer/Songwriter\">\n              Pop / Singer/Songwriter\n            </option>\n            <option value=\"Pop / Soft Rock\">\n              Pop / Soft Rock\n            </option>\n            <option value=\"Pop / Teen Pop\">\n              Pop / Teen Pop\n            </option>\n            <option value=\"R&amp;B/Soul\">\n              R&amp;B/Soul\n            </option>\n            <option value=\" R&amp;B/Soul / Contemporary R&amp;B\">\n              R&amp;B/Soul / Contemporary R&amp;B\n            </option>\n            <option value=\" R&amp;B/Soul / Disco\">\n              R&amp;B/Soul / Disco\n            </option>\n            <option value=\" R&amp;B/Soul / Doo Wop\">\n              R&amp;B/Soul / Doo Wop\n            </option>\n            <option value=\" R&amp;B/Soul / Funk\">\n              R&amp;B/Soul / Funk\n            </option>\n            <option value=\" R&amp;B/Soul / Motown\">\n              R&amp;B/Soul / Motown\n            </option>\n            <option value=\" R&amp;B/Soul / Neo-Soul\">\n              R&amp;B/Soul / Neo-Soul\n            </option>\n            <option value=\" R&amp;B/Soul / Soul\">\n              R&amp;B/Soul / Soul\n            </option>\n            <option value=\"Reggae\">\n              Reggae\n            </option>\n            <option value=\"Reggae / Dub\">\n              Reggae / Dub\n            </option>\n            <option value=\"Reggae / Roots Reggae\">\n              Reggae / Roots Reggae\n            </option>\n            <option value=\"Reggae / Ska\">\n              Reggae / Ska\n            </option>\n            <option value=\"Rock\">\n              Rock\n            </option>\n            <option value=\"Rock / Adult Alternative\">\n              Rock / Adult Alternative\n            </option>\n            <option value=\"Rock / American Trad Rock\">\n              Rock / American Trad Rock\n            </option>\n            <option value=\"Rock / Arena Rock\">\n              Rock / Arena Rock\n            </option>\n            <option value=\"Rock / Blues-Rock\">\n              Rock / Blues-Rock\n            </option>\n            <option value=\"Rock / British Invasion\">\n              Rock / British Invasion\n            </option>\n            <option value=\"Rock / Death Metal/Black Metal\">\n              Rock / Death Metal/Black Metal\n            </option>\n            <option value=\"Rock / Glam Rock\">\n              Rock / Glam Rock\n            </option>\n            <option value=\"Rock / Hair Metal\">\n              Rock / Hair Metal\n            </option>\n            <option value=\"Rock / Hard Rock\">\n              Rock / Hard Rock\n            </option>\n            <option value=\"Rock / Heavy Metal\">\n              Rock / Heavy Metal\n            </option>\n            <option value=\"Rock / Jam Bands\">\n              Rock / Jam Bands\n            </option>\n            <option value=\"Rock / Prog-Rock/Art Rock\">\n              Rock / Prog-Rock/Art Rock\n            </option>\n            <option value=\"Rock / Psychedelic\">\n              Rock / Psychedelic\n            </option>\n            <option value=\"Rock / Rockabilly\">\n              Rock / Rockabilly\n            </option>\n            <option value=\"Rock / Rock &amp; Roll\">\n              Rock / Rock &amp; Roll\n            </option>\n            <option value=\"Rock / Roots Rock\">\n              Rock / Roots Rock\n            </option>\n            <option value=\"Rock / Southern Rock\">\n              Rock / Southern Rock\n            </option>\n            <option value=\"Rock / Surf\">\n              Rock / Surf\n            </option>\n            <option value=\"Rock / Tex-Mex\">\n              Rock / Tex-Mex\n            </option>\n            <option value=\"Soundtrack\">\n              Soundtrack\n            </option>\n            <option value=\"Soundtrack / Foreign Cinema\">\n              Soundtrack / Foreign Cinema\n            </option>\n            <option value=\"Soundtrack / Musicals\">\n              Soundtrack / Musicals\n            </option>\n            <option value=\"Soundtrack / Original Score\">\n              Soundtrack / Original Score\n            </option>\n            <option value=\"Soundtrack / TV Soundtrack\">\n              Soundtrack / TV Soundtrack\n            </option>\n            <option value=\"Spoken Word\">\n              Spoken Word\n            </option>\n            <option value=\"Vocal\">\n              Vocal\n            </option>\n            <option value=\"Vocal / Standards\">\n              Vocal / Standards\n            </option>\n            <option value=\"Vocal / Traditional Pop\">\n              Vocal / Traditional Pop\n            </option>\n            <option value=\"Vocal / Vocal Jazz\">\n              Vocal / Vocal Jazz\n            </option>\n            <option value=\"Vocal / Vocal Pop\">\n              Vocal / Vocal Pop\n            </option>\n            <option value=\"World\">\n              World\n            </option>\n            <option value=\"World / Afrobeat\">\n              World / Afrobeat\n            </option>\n            <option value=\"World / Afro Pop\">\n              World / Afro Pop\n            </option>\n            <option value=\"World / Christian &amp; Gospel\">\n              World / Christian &amp; Gospel\n            </option>\n            <option value=\"World / Tango\">\n              World / Tango\n            </option>\n          </select>\n        </form>\n        <button id=\"mintButton\" onClick={onMintPressed}>\n          Mint NFT\n      </button>\n        <p id=\"status\">\n          {status}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default Minter;\n","import { useEffect, useState } from \"react\";\n\nimport logo from './img/logo.png'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\nimport { connectWallet, mintNFT } from './utils/interact.js'\n\nconst drawerWidth = 240;\n\nconst axios = require('axios');\nconst fs = require('fs');\nconst FormData = require('form-data');\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  size: {\n    height: 30,\n    width: 110\n  },\n  appBar: {\n    width: `calc(100% - 0px)`,\n    marginLeft: drawerWidth,\n    backgroundColor: \"Grey\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  pageLinks: {\n    marginLeft:\"60%\"\n    //marginTop:100\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst UploadArtwork = (props) => {\n\n  //State variables\n  const [isConnected, setConnectedStatus] = useState(false);\n  const [walletAddress, setWallet] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n//  const [url, setURL] = useState(\"\");\n  const [artwork, setArtwork] = useState(\"\");\n  const [waveform, setWaveform] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n\n const [picture, setPicture] = useState(null);\n\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const [IPFSHash, setIPFS] = useState(\"\");\n\n\n  const [image, setImage] = useState({ preview: '', raw: '' })\n\n  const types = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\n\nlet data = new FormData();\n\nconst handleChange = (e) => {\n setImage({\n  preview: URL.createObjectURL(e.target.files[0]),\n  raw: e.target.files[0]\n })\n \n let selectedFile = e.target.files[0];\n //data.append('file',selectedFile)\n data.set('file', selectedFile);\n//console.log(data.get('file'))\n if (selectedFile) {\n    if (types.includes(selectedFile.type)) {\n        setError(null);\n        setFile(selectedFile);\n    } else {\n        setFile(null);\n        setError(\"Please select an image file (png or jpg)\");\n    }\n}\n handleFinalChange(data)\n}\n\nconst handleFinalChange = (data) => {\n     const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n     axios\n        .post(url, data, {\n            maxBodyLength: 'Infinity', \n            headers: {\n                pinata_api_key: '44d08e8893e599a634ed',\n                pinata_secret_api_key: 'e66a54745cb65746969f3ae9f024f983ad395c9c436fb20c886b33ba8ad6710f'\n            }\n        })\n        .then(function (response) {\n            //handle your response here\n            console.log(response)\n            setIPFS(response.data.IpfsHash)\n        })\n        .catch(function (error) {\n            //handle error here\n            console.log(error)\n        });\n}\n\nconst url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n\nconst handleUpload = async (e) => {\n    e.preventDefault()\n    \n};\n   \n\n   \n let myname = \"Kiri\"\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            DistroToken\n          </Typography>\n        \n\n          <Breadcrumbs aria-label=\"breadcrumb\" className={classes.pageLinks}>\n            <Link color=\"inherit\" href=\"/UploadAudio\" >\n              Upload Audio\n  </Link>\n            <Link color=\"inherit\" href=\"/\" >\n              Mint Token\n  </Link>\n            <Typography color=\"textPrimary\">Upload Artwork</Typography>\n          </Breadcrumbs>\n        </Toolbar>\n      </AppBar>\n      <br />\n      <br />\n        <h1 id=\"uploadTitle\">Upload your artwork here in order to receive your  URL for minting.</h1>\n        <h3> Step One : Select Your File </h3>\n        <h3> Step Two : After You Have Selected Your File , The URL Below Will Update. </h3>\n        <h3> Step Three : Make A Note Of This URL Because You Will Need It When Minting. </h3>\n      <br />\n      <br />\n\n      <form>\n                <label>\n                    <input type=\"file\" onChange={handleChange} />\n                    \n                </label>\n\n            </form>\n            <h3> Your url is : <h3 id=\"urlTitle\"> https://gateway.pinata.cloud/ipfs/{IPFSHash} </h3> </h3>\n    </>\n  );\n};\n\nexport default UploadArtwork;\n","import firebase from 'firebase/app'\nimport 'firebase/storage'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDucuUSlvMK-x08o8V0n1cZJujJLQ-cfBk\",\n    authDomain: \"distrotoken-hosting.firebaseapp.com\",\n    projectId: \"distrotoken-hosting\",\n    storageBucket: \"distrotoken-hosting.appspot.com\",\n    messagingSenderId: \"267879625549\",\n    appId: \"1:267879625549:web:5815bcf45f9c8169437d04\",\n    measurementId: \"G-FKK0RNJKZM\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n\n  const storage = firebase.storage()\n\n\nexport  {\n    storage, firebase as default\n  }","import { useEffect, useState } from \"react\";\n\nimport logo from './img/logo.png'\n\nimport {storage} from \"./firebase/firebase\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\n\nconst drawerWidth = 240;\n\nconst axios = require('axios');\nconst fs = require('fs');\nconst FormData = require('form-data');\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  size: {\n    height: 30,\n    width: 110\n  },\n  appBar: {\n    width: `calc(100% - 0px)`,\n    marginLeft: drawerWidth,\n    backgroundColor: \"Grey\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  pageLinks: {\n    marginLeft:\"60%\"\n    //marginTop:100\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst UploadAudio = (props) => {\n\n  //State variables\nconst [selectedFile, setSelectedFile] = useState();\nconst [isFilePicked, setIsFilePicked] = useState(false);\nconst [isSelected, setIsSelected] = useState();\nconst allInputs = {imgUrl: ''}\nconst [imageAsUrl, setImageAsUrl] = useState(allInputs)\nconst [progressBar, setProgress] = useState()\n\n\n\nconst changeHandler = (event) => {\n  setSelectedFile(event.target.files[0]);\n  setIsSelected(true);\n};\n\nconst handleSubmission = () => {\n};\n\nconst handleFireBaseUpload = e => {\n  e.preventDefault()\nconsole.log('start of upload')\n// async magic goes here...\nif(selectedFile === '') {\n  console.error(`not an image, the image file is a ${typeof(selectedFile)}`)\n}\nconst uploadTask = storage.ref(`/audio/${selectedFile.name}`).put(selectedFile)\n//initiates the firebase side uploading \nuploadTask.on('state_changed', \n(snapShot) => {\n  //takes a snap shot of the process as it is happening\n  console.log(snapShot)\n  var progress = (snapShot.bytesTransferred / snapShot.totalBytes) * 100;\n  setProgress(progress)\n}, (err) => {\n  //catches the errors\n  console.log(err)\n}, () => {\n  // gets the functions from storage refences the image storage in firebase by the children\n  // gets the download url then sets the image from firebase as the value for the imgUrl key:\n  storage.ref('audio').child(selectedFile.name).getDownloadURL()\n   .then(fireBaseUrl => {\n     setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\n   })\n   \n})\n\n}\n\n\n\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n\n        <Toolbar>\n        <Typography variant=\"h6\" noWrap>\n            DistroToken\n          </Typography>          <Breadcrumbs aria-label=\"breadcrumb\" className={classes.pageLinks}>\n            <Link color=\"inherit\" href=\"/UploadArtwork\" >\n              Upload Artwork\n  </Link>\n            <Link color=\"inherit\" href=\"/\" >\n              Mint Token\n  </Link>\n            <Typography color=\"textPrimary\">Upload Audio</Typography>\n          </Breadcrumbs>\n        </Toolbar>\n      </AppBar>\n      <br />\n      <br />\n        <h1 id=\"uploadTitle\">Upload your audio file here in order to receive your  URL for minting.</h1>\n        <h3> Step One : Select Your File </h3>\n        <h3> Step Two : After You Have Selected Your File , Press The Submit Button. </h3>\n        <h3> Step Three : It will take a few seconds for the URL to appear below the 'Submit' button. </h3>\n        <h3> Step Four : Make A Note Of This URL Because You Will Need It When Minting. </h3>\n        <br />\n        <div>\n\t\t\t<input type=\"file\" name=\"file\" onChange={changeHandler} />\n\t\t\t{isSelected ? (\n\t\t\t\t<div>\n\t\t\t\t\t<p>Filename: {selectedFile.name}</p>\n\t\t\t\t\t<p>Filetype: {selectedFile.type}</p>\n\t\t\t\t\t<p>Size in bytes: {selectedFile.size}</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tlastModifiedDate:{' '}\n\t\t\t\t\t\t{selectedFile.lastModifiedDate.toLocaleDateString()}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<p>Select a file to show details</p>\n\t\t\t)}\n\t\t\t<div>\n\t\t\t\t<button onClick={handleFireBaseUpload}>Submit</button>\n\t\t\t</div>\n      <br />\n      <p>URL Of Audio: {imageAsUrl.imgUrl} </p>\n      <p>Upload is : {progressBar} %</p>\n\t\t</div>\n    </>\n  );\n};\n\nexport default UploadAudio;\n","import './App.css';\nimport Minter from './Minter'\nimport UploadArtwork from './UploadArtwork'\nimport UploadAudio from './UploadAudio'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n            <main>\n            \n            <Route exact path='/' component={Minter} />\n            <Route exact path='/UploadArtwork' component={UploadArtwork} />\n            <Route exact path='/UploadAudio' component={UploadAudio} />      \n           \n        </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}